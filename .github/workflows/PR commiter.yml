name: Safe PR Generator

on:
  workflow_dispatch:

jobs:
  create-merge-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Configure Git
        run: |
          git config user.name "Runarok"
          git config user.email "RunarokHrafn@gmail.com"

      - name: Create new branch and commit
        id: create_branch
        run: |
          BRANCH="auto-pr-$(date +%s)"
          echo "branch_name=$BRANCH" >> $GITHUB_OUTPUT
          git checkout -b $BRANCH
          echo "# PR created at $(date)" > generated.md
          git add generated.md
          git commit -m "Auto-generated file"
          git push origin $BRANCH

      - name: Create Pull Request
        id: pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          head: ${{ steps.create_branch.outputs.branch_name }}
          title: "Auto PR from ${{ steps.create_branch.outputs.branch_name }}"
          body: "Auto PR body"

      - name: Merge PR and Delete Branch
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = parseInt('${{ steps.pr.outputs.pull-request-number }}');
            if (!prNumber) {
              core.setFailed("No PR number found");
              return;
            }

            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: 'merge',
            });

            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });

            const branch = pr.data.head.ref;
            await github.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${branch}`,
            });
