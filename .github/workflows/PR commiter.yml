name: Create + Delete File PR

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"  # Every hour

jobs:
  pr-file-create-delete:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Configure Git
        run: |
          git config user.name "Runarok"
          git config user.email "RunarokHrafn@gmail.com"

      - name: Create new branch, file, delete it
        id: branch_ops
        run: |
          BRANCH_NAME="auto-pr-$(date +%s)"
          FILE_NAME="temp-${BRANCH_NAME}.txt"
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "file_name=${FILE_NAME}" >> $GITHUB_OUTPUT

          git checkout -b $BRANCH_NAME

          echo "This file will be deleted." > $FILE_NAME
          git add $FILE_NAME
          git commit -m "Add $FILE_NAME"

          git rm $FILE_NAME
          git commit -m "Delete $FILE_NAME"

          git push origin $BRANCH_NAME

      - name: Create Pull Request
        id: pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: ${{ steps.branch_ops.outputs.branch_name }}
          title: "Create and Delete File PR"
          body: "Adds and deletes a file in the same PR."

      - name: Merge PR and Delete Branch
        if: ${{ steps.pr.outputs.pull-request-number }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = parseInt('${{ steps.pr.outputs.pull-request-number }}');
            core.info(`Merging PR #${prNumber}`);

            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: 'merge',
            });

            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });

            const branch = pr.data.head.ref;
            core.info(`Deleting branch ${branch}`);

            await github.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${branch}`,
            });

      - name: Checkout back to main
        run: git checkout main
